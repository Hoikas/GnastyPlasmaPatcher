# This file is part of GnastyPlasmaPatcher.
#
# GnastyPlasmaPatcher is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# GnastyPlasmaPatcher is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GnastyPlasmaPatcher.  If not, see <https://www.gnu.org/licenses/>.

name: CI
on: [push, pull_request]

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - {
              os: windows-latest,
              generator: '-G "Visual Studio 16 2019" -A Win32',
              qt-version: 5.15.2,
              qt-arch: win32_msvc2019,
              str: windows-x86,
              triplet: x86-windows-static-md
            }
          - {
              os: windows-latest,
              generator: '-G "Visual Studio 16 2019" -A x64',
              qt-version: 5.15.2,
              qt-arch: win64_msvc2019_64,
              str: windows-x64,
              triplet: x64-windows-static-md
            }
          - {
              os: ubuntu-20.04,
              mono: mono,
              qt-version: 5.15.2,
              str: linux-x64,
              triplet: x64-linux
            }

    env:
      VCPKG_BINARY_SOURCES: clear

    steps:
      - name: Checkout GPP
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.cfg.qt-version }}
          arch: ${{ matrix.cfg.qt-arch }}

      - name: Build GPP
        run: |
          mkdir build && cd build
          cmake `
            ${{ matrix.cfg.generator }} `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/prefix" `
            -DCMAKE_BUILD_TYPE=Release `
            -DVCPKG_TARGET_TRIPLET=${{ matrix.cfg.triplet }} `
            ..
          cmake --build . -j2 --target install --config Release

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.cfg.str }}-qt${{ matrix.cfg.qt-version }}
          path: prefix/bin

